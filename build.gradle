import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'com.bmuschko.docker-remote-api' version '6.7.0'
	id 'java'
}

group = 'com.valb3r'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://jitpack.io' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'

	implementation 'org.neo4j:neo4j-ogm-bolt-native-types:3.2.17'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.2'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.5.2'

	implementation 'org.eclipse.jgit:org.eclipse.jgit:5.10.0.202012080955-r'
	implementation 'org.drools:drools-engine-classic:7.45.0.Final'

	implementation 'com.github.valb3r.letsencrypt-helper:letsencrypt-helper-tomcat:0.2.4'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.69'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.neo4j.driver:neo4j-java-driver-test-harness-spring-boot-autoconfigure:4.1.1.0'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.mockito:mockito-all:2.0.2-beta'
	testImplementation 'org.assertj:assertj-core:3.18.1'
	testImplementation 'net.lingala.zip4j:zip4j:2.6.4'
	testImplementation "org.neo4j.test:neo4j-harness:4.1.4"
	testImplementation 'ch.qos.logback:logback-classic:1.2.3'
}


ext.commitSha = {->
	'git rev-parse --verify --short HEAD'.execute().text.trim()
}

ext.dockerBuildDir = 'build/docker/'

test {
	useJUnitPlatform()
}

bootJar {
	enabled = true
	mainClassName = 'com.valb3r.projectcontrol.ProjectControlApplication'
}

jar {
	version = project.version
	enabled = true
}

task syncJar(type: Copy) {
	dependsOn bootJar
	from "${buildDir}/${libsDirName}"
	into dockerBuildDir
}

task createDockerfile(type: Dockerfile) {
	def cmd = "/app/project-control-${commitSha()}.jar";
	from 'azul/zulu-openjdk-alpine:11'
	label(['maintainer': 'valb3r'])
	workingDir("/app")
	copyFile(jar.archiveFileName.get(), cmd)
	runCommand("echo 'java -jar ${cmd}' >> run.sh && chmod +x run.sh")
	entryPoint('sh')
	defaultCommand('./run.sh')
	exposePort(8080)
}


task buildImage(type: DockerBuildImage) {
	dependsOn createDockerfile, syncJar
	inputDir.set(project.file(dockerBuildDir))
	images.add("project-control/project-control:${commitSha()}")
}

task printCommitSha {
	println "COMMIT:${commitSha()}"
}
